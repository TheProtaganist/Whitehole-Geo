/*
 * Copyright (C) 2024 Whitehole Team
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package whitehole.editor;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import whitehole.Whitehole;
import whitehole.smg.Bcsv;
import whitehole.util.SuperFastHash;
/**
 *
 * @author AwesomeTMC
 */
public class HashGeneratorForm extends javax.swing.JDialog {

    /**
     * Creates new form HashGeneratorForm
     */
    public HashGeneratorForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblInputText = new javax.swing.JLabel();
        fldInputText = new javax.swing.JTextField();
        fldGeneratedHash = new javax.swing.JTextField();
        lblGeneratedHash = new javax.swing.JLabel();
        btnCopyHash = new javax.swing.JButton();
        btnAddHash = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(Whitehole.NAME + " -- Hash Generator");
        setIconImage(Whitehole.ICON);
        setMinimumSize(new java.awt.Dimension(280, 199));
        setResizable(false);
        setSize(new java.awt.Dimension(280, 199));

        lblInputText.setText("Input Text");

        fldInputText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fldInputTextKeyReleased(evt);
            }
        });

        fldGeneratedHash.setEditable(false);
        fldGeneratedHash.setText("00000000");
        fldGeneratedHash.setName(""); // NOI18N

        lblGeneratedHash.setText("Generated Hash");

        btnCopyHash.setText("Copy Hash");
        btnCopyHash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopyHashActionPerformed(evt);
            }
        });

        btnAddHash.setText("Add Text to Lookup");
        btnAddHash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHashActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCopyHash)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(btnAddHash))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fldInputText, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                                .addComponent(fldGeneratedHash))
                            .addComponent(lblInputText)
                            .addComponent(lblGeneratedHash))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(lblInputText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fldInputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(lblGeneratedHash)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fldGeneratedHash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCopyHash)
                    .addComponent(btnAddHash))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fldInputTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fldInputTextKeyReleased
        fldGeneratedHash.setText(String.format("%1$08X", Bcsv.calcJGadgetHash(fldInputText.getText())));
    }//GEN-LAST:event_fldInputTextKeyReleased

    private void btnCopyHashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopyHashActionPerformed
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection stringSelection = new StringSelection(fldGeneratedHash.getText());
        clipboard.setContents(stringSelection, null);
    }//GEN-LAST:event_btnCopyHashActionPerformed

    private void btnAddHashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHashActionPerformed
        SuperFastHash.addToLookup(fldInputText.getText());
    }//GEN-LAST:event_btnAddHashActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddHash;
    private javax.swing.JButton btnCopyHash;
    private javax.swing.JTextField fldGeneratedHash;
    private javax.swing.JTextField fldInputText;
    private javax.swing.JLabel lblGeneratedHash;
    private javax.swing.JLabel lblInputText;
    // End of variables declaration//GEN-END:variables
}
